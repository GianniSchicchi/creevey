Phoenix Slides source code README
by Dominic Yu
created 2005 June 8
modified 2006 January 3

creevey was the code name for Phoenix Slides. Colin Creevey is the
kid in Harry Potter who keeps taking pictures.

I put my source code out in the hopes that people might contribute
to the project, and also so others may benefit from my hours of
blood, sweat, and code (as the old CodeWarrior mantra goes).

Sorry for the messy source code. I've tried to make things modular
and reusable, though a lot of classes are rather application-specific.
Let's see, the wrapping matrix is kinda cool. The dir browser could
be useful (NSBrowser quirks notwithstanding). And the
Carbon Goodies are definitely useful.

If anyone wants to contribute their coding talent and make this
program come along more quickly, help is always welcome.

TO DO:
- generate web pages
- play movies
- lossless jpeg cropping?
- speed, speed, speed. i've noticed a slight lag sometimes when going forward
  in the slideshow, which disappears if you go back over those pics again.
  can't figure out why...


Enjoy!

Version History
---------------
1.2.1
-----
show EXIF info during slideshow ('i' cycles; shift-i for more EXIF)
fixed 2 4 6 8 to not scroll orthogonal to intended dir (uninitialized vars.)
fixed incorrectly enabled menu items during slideshow
fixed drawing glitch when hiding cheat sheet (non-integral coords)
made vars volatile where necessary (i.e., when accessed from multiple threads)
zoom sticks until quit (like rotations)
show all at actual size
fat(x86) binary - especially useful: TN2137
opening a file starts slideshow immediately
option to not change mod dates for lossless jpeg (grayscale/markers still does)
fixed multiple monitor bug - dimensions but not lower left corner were used for mainScreen (the one with the key window)

1.2
---
lossless jpeg rotation and other transformations
get info window: name, alias, size, progressive, jpeg comments, exif info
- localizations from /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/Resources/
multiple windows! (this was a cr@pload of work)
save prefs on exit (i forgot to call synchronize)
tried to make thumbnail loading faster, but can't seem to make significant
  improvements. Epeg is nice, tho i can't seem to get anywhere near the promised
  25 thumbs/second, but I think that figure's just for small (<1MP) jpegs.
fixed a problem when releasing a UKKQueue that only became apparent
  when closing multiple windows (up to 5-second hang)
double-click on empty trailing whitespace or with cmd or shift no longer sends action
German localization, thanks to Thomas Steg.
removed help indexes--they were just taking up space, and it's a one-page doc anyway.
cheat sheet rect now calculated to fit text exactly
random slideshows
categories
auto vers check
zoom in slideshow - if flush to edge, zoom in on edges
  otherwise zooming in zooms in on center
faster image loading - use NSImage's setScalesWhenResized and setSize


1.1
---
info bar
resize thumbnails
change (single-)selection in matrix using arrow keys
speed/memory optimizations in wrapping matrix
- now reuses a single NSImageCell
- setNeedsDisplayInRect redraws only what's needed (selections are faster)
fixed view/thread bugs (setNeedsDisplay is not thread-safe)
animated GIFs - ridiculously simple to implement.
dir listing shows volumes at the top level
dir listing updates on volume mounting, dir renaming/deletion
  (using kqueue - it's too much to refresh for any and every
  dir content change, i think)
space now pause/continues auto-advance
pressing 1-9 now starts auto-advance right away
added scale up for small images

While optimizing the drawing in the wrapping matrix,
I discovered another Apple bug: needsToDrawRect: sometimes
returns NO when it should return YES. Supposedly fixed in 10.4,
and it's documented (TN2107), but it took me a while to figure out.


1.0
---
first release, day before Tiger (2005.04.28 Thursday).

As of June 12, there've been about 800 downloads. ONE person
has emailed me thanking me for the program. I guess that means
no one's found anything wrong with it...

The most annoying bugs are the ones in Apple's frameworks.
(cuz you assume there aren't any...)
NSBrowser seems to crash if you click on it too much (something
about the horizontal scrolling animation). I've made a poser subclass
to disable the animation.